{% extends "layout.twig" %}

{% block body %}

    <div class="row mt-2">
        <div class="col-12">
            <h1 class="display-1">Historic</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-12 mb-2">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="card-title">Recorded sessions</h4>
                    <select name="session" id="session">
                        {% for session in sessions %}
                            <option value="{{session.id}}">{{session.name | date }}</option>
                        {% endfor %}
                    </select>
                    <table id="table" class="table mt-2">
                        <thead>
                            <tr>
                                <th>Timestamp</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody id="mesures" ></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="row d-print-none">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <canvas id="graph" ></canvas>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block scripts %}

<script src="https://cdn.datatables.net/v/bs4/dt-2.0.3/datatables.min.js"></script>
<script src="/chart.umd.js"></script>

<script type="text/javascript">
    
$(() => {

    let barChart = null;

    $("#session").change(function (e) { 
        e.preventDefault();
        console.log(e.currentTarget.value);

        $.ajax({
            type: "POST",
            url: "/api/getSessionValues",
            data: {idSession: e.currentTarget.value},
            dataType: "json",
            success: function (response) {
                console.log(response);
                $("#mesures").empty();

                let pinkCount = 0;
                let yellowCount = 0;
                let otherCount = 0;

                response.forEach(measure => {
                    const row = document.createElement("tr");
                    const timestamp = document.createElement("td");
                    timestamp.innerHTML = measure.time;
                    const idColorCell = document.createElement("td");

                    // Condition pour afficher le texte correspondant Ã  idColor
                    if (measure.idColor !== 5 && measure.idColor !== 0) { // Ajout de la condition ici
                        if (measure.idColor === 1) {
                            idColorCell.innerHTML = "Pink";
                            pinkCount++;
                        } else if (measure.idColor === 2) {
                            idColorCell.innerHTML = "Yellow";
                            yellowCount++;
                        } /*else {
                            idColorCell.innerHTML = measure.idColor; // Afficher idColor tel quel pour les autres valeurs
                            otherCount++;
                        }*/

                        row.appendChild(timestamp);
                        row.appendChild(idColorCell);
                        $("#mesures").append(row);
                    }
                });
                // Gestion du graphique
                const data = {
                    labels: ['Pink', 'Yellow', 'Other'],
                    datasets: [{
                        label: 'Counts',
                        data: [pinkCount, yellowCount, otherCount],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(255, 205, 86, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 205, 86, 1)',
                            'rgba(54, 162, 235, 1)',
                        ],
                        borderWidth: 1
                    }]
                };

                if (barChart === null) {
                    const graph = $("#graph");
                    barChart = new Chart(graph, {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                } else {
                    barChart.data = data;
                    barChart.update();
                }
            }
        });
    });
});

</script>

{% endblock %}


{% block stylesheets %}
<link href="https://cdn.datatables.net/v/bs4/dt-2.0.3/datatables.min.css" rel="stylesheet">
{% endblock %}
